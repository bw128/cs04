// Copyright 2022-2024, University of Colorado Boulder

/**
 * A Property that stores "backup" locales to be used for translations, if the translation of a string is not available
 * in the main locale (determined by localeProperty)
 *
 * @author Jonathan Olson <jonathan.olson@colorado.edu>
 */

import Property from '../../../axon/js/Property.js';
import localeInfoModule from '../../../chipper/js/data/localeInfoModule.js';
import Tandem from '../../../tandem/js/Tandem.js';
import ArrayIO from '../../../tandem/js/types/ArrayIO.js';
import StringIO from '../../../tandem/js/types/StringIO.js';
import joist from '../joist.js';
const fallbackLocalesProperty = new Property([], {
  tandem: Tandem.GENERAL_MODEL.createTandem('fallbackLocalesProperty'),
  phetioDocumentation: 'An ordered list of locales to "fall back" on when a translation is missing for the selected ' + 'locale, for example: ["es", "de" ]. "en" will always be added to the end of this, because it has ' + 'guaranteed full coverage of all translated keys.',
  phetioFeatured: true,
  isValidValue: locales => {
    return _.every(locales, locale => !!localeInfoModule[locale]);
  },
  phetioValueType: ArrayIO(StringIO)
});
joist.register('fallbackLocalesProperty', fallbackLocalesProperty);
export default fallbackLocalesProperty;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9wZXJ0eSIsImxvY2FsZUluZm9Nb2R1bGUiLCJUYW5kZW0iLCJBcnJheUlPIiwiU3RyaW5nSU8iLCJqb2lzdCIsImZhbGxiYWNrTG9jYWxlc1Byb3BlcnR5IiwidGFuZGVtIiwiR0VORVJBTF9NT0RFTCIsImNyZWF0ZVRhbmRlbSIsInBoZXRpb0RvY3VtZW50YXRpb24iLCJwaGV0aW9GZWF0dXJlZCIsImlzVmFsaWRWYWx1ZSIsImxvY2FsZXMiLCJfIiwiZXZlcnkiLCJsb2NhbGUiLCJwaGV0aW9WYWx1ZVR5cGUiLCJyZWdpc3RlciJdLCJzb3VyY2VzIjpbImZhbGxiYWNrTG9jYWxlc1Byb3BlcnR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIyLTIwMjQsIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gQm91bGRlclxyXG5cclxuLyoqXHJcbiAqIEEgUHJvcGVydHkgdGhhdCBzdG9yZXMgXCJiYWNrdXBcIiBsb2NhbGVzIHRvIGJlIHVzZWQgZm9yIHRyYW5zbGF0aW9ucywgaWYgdGhlIHRyYW5zbGF0aW9uIG9mIGEgc3RyaW5nIGlzIG5vdCBhdmFpbGFibGVcclxuICogaW4gdGhlIG1haW4gbG9jYWxlIChkZXRlcm1pbmVkIGJ5IGxvY2FsZVByb3BlcnR5KVxyXG4gKlxyXG4gKiBAYXV0aG9yIEpvbmF0aGFuIE9sc29uIDxqb25hdGhhbi5vbHNvbkBjb2xvcmFkby5lZHU+XHJcbiAqL1xyXG5cclxuaW1wb3J0IFByb3BlcnR5IGZyb20gJy4uLy4uLy4uL2F4b24vanMvUHJvcGVydHkuanMnO1xyXG5pbXBvcnQgbG9jYWxlSW5mb01vZHVsZSBmcm9tICcuLi8uLi8uLi9jaGlwcGVyL2pzL2RhdGEvbG9jYWxlSW5mb01vZHVsZS5qcyc7XHJcbmltcG9ydCBUYW5kZW0gZnJvbSAnLi4vLi4vLi4vdGFuZGVtL2pzL1RhbmRlbS5qcyc7XHJcbmltcG9ydCBBcnJheUlPIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9BcnJheUlPLmpzJztcclxuaW1wb3J0IFN0cmluZ0lPIGZyb20gJy4uLy4uLy4uL3RhbmRlbS9qcy90eXBlcy9TdHJpbmdJTy5qcyc7XHJcbmltcG9ydCBqb2lzdCBmcm9tICcuLi9qb2lzdC5qcyc7XHJcbmltcG9ydCB7IExvY2FsZSB9IGZyb20gJy4vbG9jYWxlUHJvcGVydHkuanMnO1xyXG5cclxuY29uc3QgZmFsbGJhY2tMb2NhbGVzUHJvcGVydHkgPSBuZXcgUHJvcGVydHk8TG9jYWxlW10+KCBbXSwge1xyXG4gIHRhbmRlbTogVGFuZGVtLkdFTkVSQUxfTU9ERUwuY3JlYXRlVGFuZGVtKCAnZmFsbGJhY2tMb2NhbGVzUHJvcGVydHknICksXHJcbiAgcGhldGlvRG9jdW1lbnRhdGlvbjogJ0FuIG9yZGVyZWQgbGlzdCBvZiBsb2NhbGVzIHRvIFwiZmFsbCBiYWNrXCIgb24gd2hlbiBhIHRyYW5zbGF0aW9uIGlzIG1pc3NpbmcgZm9yIHRoZSBzZWxlY3RlZCAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICAnbG9jYWxlLCBmb3IgZXhhbXBsZTogW1wiZXNcIiwgXCJkZVwiIF0uIFwiZW5cIiB3aWxsIGFsd2F5cyBiZSBhZGRlZCB0byB0aGUgZW5kIG9mIHRoaXMsIGJlY2F1c2UgaXQgaGFzICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICdndWFyYW50ZWVkIGZ1bGwgY292ZXJhZ2Ugb2YgYWxsIHRyYW5zbGF0ZWQga2V5cy4nLFxyXG4gIHBoZXRpb0ZlYXR1cmVkOiB0cnVlLFxyXG4gIGlzVmFsaWRWYWx1ZTogbG9jYWxlcyA9PiB7XHJcbiAgICByZXR1cm4gXy5ldmVyeSggbG9jYWxlcywgbG9jYWxlID0+ICEhbG9jYWxlSW5mb01vZHVsZVsgbG9jYWxlIF0gKTtcclxuICB9LFxyXG4gIHBoZXRpb1ZhbHVlVHlwZTogQXJyYXlJTyggU3RyaW5nSU8gKVxyXG59ICk7XHJcblxyXG5qb2lzdC5yZWdpc3RlciggJ2ZhbGxiYWNrTG9jYWxlc1Byb3BlcnR5JywgZmFsbGJhY2tMb2NhbGVzUHJvcGVydHkgKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZhbGxiYWNrTG9jYWxlc1Byb3BlcnR5OyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU9BLFFBQVEsTUFBTSw4QkFBOEI7QUFDbkQsT0FBT0MsZ0JBQWdCLE1BQU0sOENBQThDO0FBQzNFLE9BQU9DLE1BQU0sTUFBTSw4QkFBOEI7QUFDakQsT0FBT0MsT0FBTyxNQUFNLHFDQUFxQztBQUN6RCxPQUFPQyxRQUFRLE1BQU0sc0NBQXNDO0FBQzNELE9BQU9DLEtBQUssTUFBTSxhQUFhO0FBRy9CLE1BQU1DLHVCQUF1QixHQUFHLElBQUlOLFFBQVEsQ0FBWSxFQUFFLEVBQUU7RUFDMURPLE1BQU0sRUFBRUwsTUFBTSxDQUFDTSxhQUFhLENBQUNDLFlBQVksQ0FBRSx5QkFBMEIsQ0FBQztFQUN0RUMsbUJBQW1CLEVBQUUsOEZBQThGLEdBQzlGLG1HQUFtRyxHQUNuRyxrREFBa0Q7RUFDdkVDLGNBQWMsRUFBRSxJQUFJO0VBQ3BCQyxZQUFZLEVBQUVDLE9BQU8sSUFBSTtJQUN2QixPQUFPQyxDQUFDLENBQUNDLEtBQUssQ0FBRUYsT0FBTyxFQUFFRyxNQUFNLElBQUksQ0FBQyxDQUFDZixnQkFBZ0IsQ0FBRWUsTUFBTSxDQUFHLENBQUM7RUFDbkUsQ0FBQztFQUNEQyxlQUFlLEVBQUVkLE9BQU8sQ0FBRUMsUUFBUztBQUNyQyxDQUFFLENBQUM7QUFFSEMsS0FBSyxDQUFDYSxRQUFRLENBQUUseUJBQXlCLEVBQUVaLHVCQUF3QixDQUFDO0FBRXBFLGVBQWVBLHVCQUF1QiIsImlnbm9yZUxpc3QiOltdfQ==